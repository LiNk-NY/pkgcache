% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/installed.R
\name{lib_status}
\alias{lib_status}
\title{List metadata of installed packages}
\usage{
lib_status(library = .libPaths(), priority = NULL)
}
\arguments{
\item{library}{Character vector of library paths.}

\item{priority}{If not \code{NULL} then it may be a \code{"base"} \code{"recommended"}
\code{NA} or a vector of these to select \emph{base} packages, \emph{recommended}
packages or \emph{other} packages. (These are the official, CRAN supported
package priorities, but you may introduce others in non-CRAN packages.)}
}
\description{
This function is similar to \code{\link[utils:installed.packages]{utils::installed.packages()}}.
See the differences below.
}
\details{
Differences with \code{\link[utils:installed.packages]{utils::installed.packages()}}:
\itemize{
\item \code{lib_status()} cannot subset the extracted fields. (But you can
subset the result.)
\item \code{lib_status()} does not cache the results.
\item \code{lib_status()} handles errors better. See Section 'Errors'\code{below. #' * }lib_status()\verb{uses the}DESCRIPTION\verb{files in the installed packages instead of the}Meta/package.rds\verb{files. This should not matter, but because of a bug}Meta/package.rds\verb{might contain the wrong}Archs` field on multi-arch platforms.
\item \code{lib_status()} reads \emph{all} fields from the \code{DESCRIPTION} files.
\code{\link[utils:installed.packages]{utils::installed.packages()}} only reads
\item \code{lib_status()} is considerably faster.
}
\subsection{Errors}{

pkgcache silently ignores files and directories inside the library
directory.

The result also omits broken package installations. These include
\itemize{
\item packages with invalid \code{DESCRIPTION} files, and
\item packages the current user have no access to.
}

These errors are reported via a condition with class
\code{pkgcache_broken_install}. The condition has an \code{errors} entry, which
is a tibble with columns
\itemize{
\item \code{file}: path to the \code{DESCRIPTION} file of the broken package,
\item \code{error}: error message for this particular failure.
}

If you indend to handle broken package installation, you need to catch
this condition with \code{withCallingHandlers()}.
}
}
